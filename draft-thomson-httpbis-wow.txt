



HTTPBIS                                                       M. Thomson
Internet-Draft                                                   Mozilla
Intended status: Standards Track                      September 12, 2014
Expires: March 16, 2015


        Weighted, Ordered, Weighted (WOW) Priority for HTTP/2.0
                    draft-thomson-httpbis-wow-latest

Abstract

   This document provides an alternative description of priority
   semantics for HTTP/2.0.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on March 16, 2015.

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.






Thomson                  Expires March 16, 2015                 [Page 1]

Internet-Draft                WOW Priority                September 2014


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Conventions and Terminology . . . . . . . . . . . . . . .   3
   2.  Weight, Order, Weight . . . . . . . . . . . . . . . . . . . .   3
     2.1.  Stream Identification . . . . . . . . . . . . . . . . . .   4
     2.2.  Stream Retention  . . . . . . . . . . . . . . . . . . . .   4
   3.  Priority Field  . . . . . . . . . . . . . . . . . . . . . . .   5
   4.  Security Considerations . . . . . . . . . . . . . . . . . . .   6
   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   6
   6.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   6
   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   6
     7.1.  Normative References  . . . . . . . . . . . . . . . . . .   6
     7.2.  Informative References  . . . . . . . . . . . . . . . . .   6
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   6

1.  Introduction

   A client that is able to express a richer set of prioritization
   semantics to a server can improve the overall efficiency of actions
   by ensuring that important data is available when it is most needed.

   This document describes a prioritization scheme that is relatively
   simple, yet capable of describing priority with a relatively high
   degree of specificity.  Importantly, since priority is advisory only,
   this scheme ensures that the cost to implementations that do not
   require prioritization features is minimal.

   The prioritization scheme operates in three layers:

   o  In the first layer, streams are given a relative weight.  This
      weighting indicates what proportion of available resources are
      best allocated to each stream.

   o  The second layer establishes a strict ordering between streams.
      Stream later in the ordering sequence are of no use until earlier
      streams are complete.

   o  The third layer describes a weight for streams that are dependent
      on the same resource completion.

   This scheme is identical in function to the scheme described in
   [I-D.chan-http2-stream-dependencies].  The differences are largely in
   presentation and syntax.







Thomson                  Expires March 16, 2015                 [Page 2]

Internet-Draft                WOW Priority                September 2014


1.1.  Conventions and Terminology

   At times, this document falls back on shorthands for establishing
   interoperability requirements on implementations: the capitalized
   words "MUST", "SHOULD" and "MAY".  These terms are defined in
   [RFC2119].

2.  Weight, Order, Weight

   Each stream is given two priority values: weight and order.  These
   determine how resources are best allocated to streams.

   In many cases with HTTP/2.0, the "resource" that priority information
   controls (or guides) will be the bandwidth from the server to the
   client.  Servers with data available for multiple streams can select
   streams for which to send based on priority.

   Weight is expressed a number between 1 and 256.  Ideally, a stream
   with weight 2 is given one third of the resources that a stream with
   weight 6 is given.  Streams are given a weight of 32 if priority is
   not specified.

   Order is specified by identifying another stream.  The special stream
   identifier of zero is used to indicate that this stream is not
   dependent on the completion of any other stream.

   Streams that specify an ordering dependency on other streams do not
   form a dependency tree.  Though an ordering dependency identifies a
   specific stream, all streams that depend on the same stream are
   considered equivalent, except for those that depend on stream zero.
   For example, if stream B and C both depend on stream A, stream D can
   specify a dependency on either B or C to the same effect.  This
   enables the use of simpler data structures for tracking stream
   dependencies.

   Rules for respecting these values are simple:

   o  Streams that depend on another stream block until the stream (or
      streams) that they depend on closes.

   o  Streams that depend on the same stream form a group from which
      resources are allocated based on the relative weights assigned to
      those streams.  This includes streams dependent on stream zero.
      Streams within the same group are selected based on their weight
      values, using systems like weighted fair queueing [REF], or
      lottery scheduling [REF].





Thomson                  Expires March 16, 2015                 [Page 3]

Internet-Draft                WOW Priority                September 2014


   o  Once a stream is closed, any resources allocated to that stream
      are used for streams that directly depend on it using these same
      rules, recursively.

   Stream prioritization information is retained as long as possible, or
   until explicitly released, see Section 2.2.

2.1.  Stream Identification

   Stream prioritization, where used, is likely to be included with
   every stream.  Therefore, there is a desire to minimize the number of
   bits used.  The stream identifier, at 31 bits, represents information
   that is largely redundant, since it is unlikely that either streams
   from a long time past, or future (and therefore non-existent) streams
   will be used.

   This document describes an identifiation scheme that references
   streams relative to the most recently opened stream in the
   corresponding direction.  The stream identifier used contains the
   least significant bits from the stream identifier most recently
   opened in the corresponding direction.  In the case of a HEADERS
   frame that opens a stream, the stream identifier in the frame header
   is used.

   This results in some uncertainty when identifying streams opened by
   the remote peer.  For pushed streams, any number of streams can be
   opened and closed in the time that the priority information is in
   transit, limited only by the ability of the peer to send data for
   those streams.  There is no true guarantee against this problem,
   other than the size of the ordering dependency field.  However, to
   limit the chances of this occurring, implementations MUST NOT skip
   values when allocating stream identifiers.

2.2.  Stream Retention

   A prioritization scheme that relies on ordering requires that the
   prioritization information for a stream live beyong the normal
   lifetime of the stream itself.  A stream with dependencies
   necessarily passes relative weighting to its dependent streams; due
   to transit delays, a stream can be closed at one endpoint at the same
   time that additional dependencies are created upon it.  Therefore, it
   is RECOMMENDED that stream priority information be retained beyond
   the normal lifecycle of a stream.

   In order to support the ability of an endpoint to release resources,
   several bits are added to the priority field to identify the highest
   numbered stream (for a given direction) for which stream.  This value




Thomson                  Expires March 16, 2015                 [Page 4]

Internet-Draft                WOW Priority                September 2014


   is expressed relative to the stream identified in the current
   ordering dependency.

   Streams that are part of the first weighted set (i.e., those that
   depend on stream 0) SHOULD be retained in preference to streams with
   explicit ordering dependencies.  The weighting values on those
   streams determines the proportional resource allocation to their
   dependent streams at the connection level, which is likely to be
   important, particularly in intermediation cases.

3.  Priority Field

   The PRIORITY flag in a HEADERS frame determines whether a specific
   priority included.  Absence of this flag indicates that default (or
   pre-existing) values are to be used for the stream.

   Weight and order are then packed into the 32-bit field as follows:

   Weight (8 bits):  The weight value occupies the first 8 bits.  To
      obtain the weight value between 1 and 256 (inclusive), one is
      added to the value of the field.

   Order Present (1 bit):  This bit, if set, indicates that the
      prioritized stream is dependent on another stream and that Order
      field contains part of a stream identifier.  Or, from an
      alternative perspective, a value of zero on this bit indicates
      that this stream depends only on the special stream 0.

   Order (19 bits):  These bits contain the least significant bits of
      the stream identifier upon which this stream depends.  If the
      Order Present bit is not set, these bits are used to determine the
      basis for stream release.

      The 12 high bits of the stream identifier are taken from the
      identifier of the highest-numbered non-idle stream, which includes
      the current stream.  This value is reduced (by 2^19 after
      assembly) if the resulting value is greater than the current
      stream identifier.

   Maximum Unused Stream Identifier (4 bits):  The value of this field
      is determined by the formula: 2*(4^x).  The resulting value is the
      difference between the stream identifier referenced in the Order
      field and the last stream identifier for which the receiver can
      safely discard priority information.  This constitutes a promise
      that the identified stream and all those with lower identifiers
      will not be referenced in later prioritization indications.  A
      value of all ones (15) is reserved to indicate an infinite value,
      or that no information can be discarded.



Thomson                  Expires March 16, 2015                 [Page 5]

Internet-Draft                WOW Priority                September 2014


4.  Security Considerations

   This prioritization scheme can cause the retention of state for a
   stream beyond the lifetime of the stream.  A malicious endpoint could
   exploit this to cause a poorly protected implementation to expend
   excessive resources tracking streams.

   Priority is advisory only.  Implementations are able to safely
   discard priority information at any time and the only conseuqence is
   inferior performance.  An implementation SHOULD limit the resources
   it dedicates to tracking priority and discard prioritization
   information if these limits are exceeded.  Implementations can choose
   to discard excess state based on time, memory allocation limits, or
   the stream identifier ordinal value.

5.  IANA Considerations

   This document makes no request of IANA.

6.  Acknowledgements

   Will Chan and his peers did most of this work.  This document merely
   transcribes that work and tweaks the formula a little.

7.  References

7.1.  Normative References

   [I-D.ietf-httpbis-http2]
              Belshe, M., Peon, R., and M. Thomson, "Hypertext Transfer
              Protocol version 2", draft-ietf-httpbis-http2-14 (work in
              progress), July 2014.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

7.2.  Informative References

   [I-D.chan-http2-stream-dependencies]
              Piatek, M. and W. Chan, "HTTP/2 Stream Dependencies",
              draft-chan-http2-stream-dependencies-00 (work in
              progress), January 2014.

Author's Address







Thomson                  Expires March 16, 2015                 [Page 6]

Internet-Draft                WOW Priority                September 2014


   Martin Thomson
   Mozilla
   Suite 300
   650 Castro Street
   Mountain View, CA  94041
   US

   Email: martin.thomson@gmail.com











































Thomson                  Expires March 16, 2015                 [Page 7]
